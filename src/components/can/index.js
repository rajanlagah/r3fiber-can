/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { Color } from 'three'

export function CanModel(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/model/can4.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    // Set the CAN material to a silver color
    if (materials.CAN) {
      materials.CAN.color = new Color(0xB1B1B1) // Light gray for silver color
      materials.CAN.metalness = 0.8            // High metalness for a metallic look
      materials.CAN.roughness = 0.3            // Low roughness for a reflective surface
    }
  }, [materials])


  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="can">
          <mesh
            name="Cylinder"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder.geometry}
            material={materials.CAN}
          />
          <mesh
            name="Cylinder_1"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder_1.geometry}
            material={materials.CAN}
          />
          <mesh
            name="can_cap"
            castShadow
            receiveShadow
            geometry={nodes.can_cap.geometry}
            material={materials.CAN}>
            <mesh
              name="Circle"
              castShadow
              receiveShadow
              geometry={nodes.Circle.geometry}
              position={[1,1,5]}
              material={{
                color: new Color(0x000)
              }}
            />
          </mesh>
        </group>
      </group>
    </group>
  )
}
useGLTF.preload('/model/can3.glb')
